{"version":3,"file":"index.min.js","sources":["../src/base.ts","../src/challenge.ts","../src/client.ts","../src/refreshToken.ts","../src/state.ts","../src/token.ts","../src/bridge/CookieUniversal.ts","../src/init.ts","../src/bridge/StorageLocalForage.ts"],"sourcesContent":["import {\n  CookieGetOptions,\n  CookieSetOptions, Data,\n  StorageInterface,\n  TokenConfig,\n} from './interfaces';\n\nexport default abstract class Base {\n  protected defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n  };\n\n  public config: TokenConfig;\n\n  protected constructor(\n    protected storage: StorageInterface,\n    // eslint-disable-next-line no-empty-function\n  ) {\n\n  }\n\n  public get<T = Data>(options?: CookieGetOptions): Promise<T> {\n    return this.storage.get<T>(this.getName(), options);\n  }\n\n  public remove(options?: CookieSetOptions): void {\n    this.storage.remove(this.getName(), options);\n  }\n\n  public set<T>(value: T, options?: CookieSetOptions): Promise<T> {\n    return this.storage.set<T>(this.getName(), value, options);\n  }\n\n  public setConfig(defaultConfig: TokenConfig, config?: TokenConfig) {\n    if (config) {\n      this.config = { ...defaultConfig, ...config };\n      return;\n    }\n    this.config = { ...defaultConfig };\n  }\n\n  public getName(): string {\n    const { prefix, name } = this.config;\n\n    if (!prefix) {\n      return name;\n    }\n\n    return `${prefix}${name}`;\n  }\n}\n","import forge from 'node-forge';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Base from './base';\nimport {\n  BaseInterface,\n  StorageInterface, TokenConfig,\n} from './interfaces';\n\nexport default class Challenge extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'challenge',\n  };\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n\n  public generate(): Promise<string> {\n    let challenge = `${(uuidv4() as string)}${(uuidv4() as string)}${(uuidv4() as string)}`;\n    challenge = challenge.replaceAll('-', '');\n\n    const md = forge.md.sha256.create();\n    md.update(challenge);\n    // noinspection UnnecessaryLocalVariableJS\n    const code = forge.util.encode64(md.digest().data);\n\n    const hash = code.replaceAll('+', '-')\n      .replaceAll('/', '_')\n      .replace(/=$/, '');\n\n    this.set(challenge);\n\n    return Promise.resolve(hash);\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nimport Challenge from './challenge';\nimport {\n  DataInterface,\n  OAuthConfigInterface,\n} from './interfaces';\nimport State from './state';\n\nexport default class Client {\n  constructor(private config: OAuthConfigInterface,\n              private challenge: Challenge,\n              private state: State) { // eslint-disable-next-line no-empty-function\n  }\n\n  public getConfig(key?: string): string | OAuthConfigInterface {\n    if (key) {\n      return this.config[key];\n    }\n\n    return this.config;\n  }\n\n  public authorize(scope: string): void {\n    if (!window) {\n      throw new Error('Oauth service can only be run client side.');\n    }\n    const state = uuidv4().replaceAll('-', '');\n\n    Promise.all([\n      this.challenge.generate(),\n      this.state.set(state)]).then(([challenge]) => {\n      const { client_id, authenticateUri } = this.config;\n\n      const params = {\n        state,\n        client_id,\n        scope,\n        redirect_uri: this.getRedirectUri(),\n        response_type: 'code',\n        code_challenge: challenge,\n        code_challenge_method: 'S256',\n      };\n\n      const searchParams = new URLSearchParams(params as any);\n      window.location.href = `${authenticateUri as string}?${searchParams.toString()}`;\n    });\n  }\n\n  public async getRequestTokenData(state: string, code: string): Promise<DataInterface> {\n    const localState = await this.state.get();\n    const challenge = await this.challenge.get();\n\n    if (localState !== state) {\n      throw new Error('State do not match');\n    }\n\n    const { client_id, tokenUri } = this.config;\n\n    return {\n      uri: tokenUri,\n      data: {\n        code,\n        client_id,\n        code_verifier: challenge,\n        redirect_uri: this.getRedirectUri(),\n        grant_type: 'authorization_code',\n      },\n    };\n  }\n\n  public getRefreshTokenData(scope: string, token: string) {\n    const { client_id, tokenUri, refreshUri } = this.config;\n    return {\n      uri: refreshUri || tokenUri,\n      data: {\n        client_id,\n        scope,\n        refresh_token: token,\n        grant_type: 'refresh_token',\n      },\n    };\n  }\n\n  private getRedirectUri() {\n    const { redirectUri } = this.config;\n    const { location: { protocol, hostname, port } } = window;\n    let rUri = `${protocol}://${hostname}${redirectUri}`;\n    if ((protocol === 'https:' && port !== '443') || (protocol === 'http:' && port !== '80')) {\n      rUri = `${protocol}//${hostname}:${port}${redirectUri}`;\n    }\n\n    return rUri;\n  }\n}\n","import Base from './base';\nimport {\n  BaseInterface,\n  StorageInterface, TokenConfig,\n} from './interfaces';\n\nexport default class RefreshToken extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'refresh_token',\n  };\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n}\n","import Base from './base';\nimport {\n  BaseInterface, StorageInterface,\n  TokenConfig,\n} from './interfaces';\n\nexport default class State extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'state',\n  };\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n}\n","import jwt_decode from 'jwt-decode';\n\nimport Base from './base';\nimport {\n  BaseInterface,\n  CookieGetOptions,\n  CookieSetOptions, Data,\n  ParseTokenInterface,\n  StorageInterface, TokenConfig,\n} from './interfaces';\n\nexport default class Token extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'token',\n  };\n\n  private parsed: ParseTokenInterface;\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n\n  public set<T = Data>(value: T, options?: CookieSetOptions): Promise<T> {\n    if (typeof value === 'string') {\n      this.parseToken(value);\n    }\n    return this.storage.set<T>(this.getName(), value, options);\n  }\n\n  private parseToken(token: string): void {\n    this.parsed = jwt_decode(token);\n  }\n\n  public getParsed(): any {\n    return this.parsed;\n  }\n\n  public isLoaded(): boolean {\n    return !!this.parsed;\n  }\n\n  public isExpired(): boolean {\n    if (!this.parsed) {\n      return false;\n    }\n\n    const date = new Date();\n    return date.getTime() <= this.parsed.exp;\n  }\n\n  public guard(scope?: string | string[]): boolean {\n    if (!this.parsed) {\n      return false;\n    }\n\n    if (typeof scope === 'undefined') {\n      return true;\n    }\n\n    const scopes = Array.isArray(scope) ? scope : [scope];\n    const filtered = scopes.filter((item: string) => !this.parsed.scopes.includes(item));\n    return filtered.length <= 0;\n  }\n\n  public async loadToken(options?: CookieGetOptions): Promise<boolean> {\n    const token = await this.get(options);\n\n    if (!token || typeof token !== 'string') {\n      return false;\n    }\n\n    this.parseToken(token);\n\n    if (this.isExpired()) {\n      this.remove();\n      return false;\n    }\n\n    return true;\n  }\n}\n","import Cookies from 'universal-cookie';\n\nimport {\n  CookieGetOptions,\n  CookieSetOptions,\n  Data,\n  StorageInterface,\n} from '../interfaces';\n\nexport default class CookieUniversal implements StorageInterface {\n  // eslint-disable-next-line no-empty-function\n  constructor(private instance: Cookies) {\n  }\n\n  public set<T = Data>(name: string, value: T, options?: CookieSetOptions): Promise<T> {\n    this.instance.set(name, value, { path: '/', ...options });\n\n    return Promise.resolve<T>(value);\n  }\n\n  public async get<T = Data>(name: string, options?: CookieGetOptions): Promise<T> {\n    return Promise.resolve(this.instance.get(name, options));\n  }\n\n  public async remove(name: string, options?: CookieSetOptions): Promise<void> {\n    await this.instance.remove(name, { path: '/', ...options });\n  }\n}\n","import Challenge from './challenge';\nimport Client from './client';\nimport {\n  InitOptionsInterface,\n  OAuthConfigInterface,\n  StorageInterface,\n} from './interfaces';\nimport RefreshToken from './refreshToken';\nimport State from './state';\nimport Token from './token';\n\nexport default class Init {\n  private readonly token: Token;\n\n  private readonly refreshToken: RefreshToken;\n\n  private readonly challenge: Challenge;\n\n  private readonly state: State;\n\n  private readonly client: Client;\n\n  public constructor(\n    private oAuthConfig: OAuthConfigInterface,\n    private storage: StorageInterface,\n    private options: InitOptionsInterface,\n  ) {\n    this.token = new Token(options?.token?.storage || storage, options?.token);\n    this.refreshToken = new RefreshToken(options?.refreshToken?.storage || storage, options?.refreshToken);\n    this.challenge = new Challenge(options?.challenge?.storage || storage, options?.challenge);\n    this.state = new State(options?.state?.storage || storage, options?.state);\n\n    this.client = new Client(this.oAuthConfig, this.challenge, this.state);\n  }\n\n  public getToken(): Token {\n    return this.token;\n  }\n\n  public getRefreshToken(): RefreshToken {\n    return this.refreshToken;\n  }\n\n  public getChallenge(): Challenge {\n    return this.challenge;\n  }\n\n  public getState(): State {\n    return this.state;\n  }\n\n  public getClient(): Client {\n    return this.client;\n  }\n}\n","import * as LocalForage from 'localforage';\n\nimport {\n  CookieGetOptions,\n  CookieSetOptions,\n  Data,\n  StorageInterface,\n} from '../interfaces';\n\nexport default class StorageLocalForage implements StorageInterface {\n  // eslint-disable-next-line no-empty-function\n  constructor(private instance: LocalForage) {\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public set<T = Data>(name: string, value: T, _options?: CookieSetOptions): Promise<T> {\n    return this.instance.setItem<T>(name, value);\n  }\n\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async get<T = Data>(name: string, _options?: CookieGetOptions): Promise<T> {\n    // eslint-disable-next-line no-return-await\n    return await this.instance.getItem<T>(name);\n  }\n\n  public async remove(name: string): Promise<void> {\n    await this.instance.removeItem(name);\n  }\n}\n"],"names":["Base","constructor","storage","this","defaultConfig","prefix","get","options","getName","remove","set","value","setConfig","config","name","Challenge","super","generate","challenge","uuidv4","replaceAll","md","forge","sha256","create","update","hash","util","encode64","digest","data","replace","Promise","resolve","Client","state","getConfig","key","authorize","scope","window","Error","all","then","client_id","authenticateUri","params","redirect_uri","getRedirectUri","response_type","code_challenge","code_challenge_method","searchParams","URLSearchParams","location","href","toString","async","code","localState","tokenUri","uri","code_verifier","grant_type","getRefreshTokenData","token","refreshUri","refresh_token","redirectUri","protocol","hostname","port","rUri","RefreshToken","State","Token","parseToken","parsed","jwt_decode","getParsed","isLoaded","isExpired","Date","getTime","exp","guard","Array","isArray","filter","item","scopes","includes","length","instance","path","oAuthConfig","_a","refreshToken","_b","_c","_d","client","getToken","getRefreshToken","getChallenge","getState","getClient","_options","setItem","getItem","removeItem"],"mappings":"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"}