{"version":3,"file":"index.js","sources":["../src/base.ts","../src/bridge/CookieUniversal.ts","../src/bridge/StorageLocalForage.ts","../src/challenge.ts","../src/client.ts","../src/refreshToken.ts","../src/state.ts","../src/token.ts"],"sourcesContent":["import {\n  CookieGetOptions,\n  CookieSetOptions, Data,\n  StorageInterface,\n  TokenConfig,\n} from './interfaces';\n\nexport default abstract class Base {\n  protected defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n  };\n\n  public config: TokenConfig;\n\n  protected constructor(\n    protected storage: StorageInterface,\n    // eslint-disable-next-line no-empty-function\n  ) {\n\n  }\n\n  public get(options?: CookieGetOptions): Promise<any> {\n    return this.storage.get(this.getName(), options);\n  }\n\n  public remove(options?: CookieSetOptions): void {\n    this.storage.remove(this.getName(), options);\n  }\n\n  public set(value: Data, options?: CookieSetOptions): void {\n    this.storage.set(this.getName(), value, options);\n  }\n\n  public setConfig(defaultConfig: TokenConfig, config?: TokenConfig) {\n    if (config) {\n      this.config = { ...defaultConfig, ...config };\n      return;\n    }\n    this.config = { ...defaultConfig };\n  }\n\n  public getName(): string {\n    const { prefix, name } = this.config;\n\n    if (!prefix) {\n      return name;\n    }\n\n    return `${prefix}${name}`;\n  }\n}\n","import Cookies from 'universal-cookie';\n\nimport {\n  CookieGetOptions,\n  CookieSetOptions,\n  Data,\n  StorageInterface,\n} from '../interfaces';\n\nexport default class CookieUniversal implements StorageInterface {\n  // eslint-disable-next-line no-empty-function\n  constructor(private instance: Cookies) {\n  }\n\n  public set(name: string, value: Data, options?: CookieSetOptions): void {\n    this.instance.set(name, value, { path: '/', ...options });\n  }\n\n  public async get(name: string, options?: CookieGetOptions): Promise<string> {\n    return Promise.resolve(this.instance.get(name, options));\n  }\n\n  public async remove(name: string, options?: CookieSetOptions): Promise<void> {\n    await this.instance.remove(name, { path: '/', ...options });\n  }\n}\n","import * as LocalForage from 'localforage';\n\nimport {\n  CookieGetOptions,\n  CookieSetOptions,\n  Data,\n  StorageInterface,\n} from '../interfaces';\n\nexport default class StorageLocalForage implements StorageInterface {\n  // eslint-disable-next-line no-empty-function\n  constructor(private instance: LocalForage) {\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public set(name: string, value: Data, _options?: CookieSetOptions): void {\n    this.instance.setItem(name, value);\n  }\n\n  // @ts-ignore\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  public async get(name: string, _options?: CookieGetOptions): Promise<string> {\n    // eslint-disable-next-line no-return-await\n    return await this.instance.getItem<string | null>(name);\n  }\n\n  public async remove(name: string): Promise<void> {\n    await this.instance.removeItem(name);\n  }\n}\n","import Base from './base';\nimport {\n  BaseInterface,\n  StorageInterface, TokenConfig,\n} from './interfaces';\n\nexport default class Challenge extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'challenge',\n  };\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n}\n","import forge from 'node-forge';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Challenge from './challenge';\nimport {\n  DataInterface,\n  OAuthConfigInterface,\n} from './interfaces';\nimport State from './state';\n\nexport default class Client {\n  constructor(private config: OAuthConfigInterface,\n              private challenge: Challenge,\n              private state: State) { // eslint-disable-next-line no-empty-function\n  }\n\n  public getConfig(key?: string): string | OAuthConfigInterface {\n    if (key) {\n      return this.config[key];\n    }\n\n    return this.config;\n  }\n\n  public authorize(scope: string): void {\n    if (!window) {\n      throw new Error('Oauth service can only be run client side.');\n    }\n\n    const challenge = this.getChallenge();\n    const state = uuidv4().replaceAll('-', '');\n    this.state.set(state);\n\n    const { client_id, authenticateUri } = this.config;\n\n    const params = {\n      state,\n      client_id,\n      scope,\n      redirect_uri: this.getRedirectUri(),\n      response_type: 'code',\n      code_challenge: challenge,\n      code_challenge_method: 'S256',\n    };\n\n    const searchParams = new URLSearchParams(params as any);\n\n    window.location.href = `${authenticateUri as string}?${searchParams.toString()}`;\n  }\n\n  private getChallenge(): string {\n    let challenge = `${(uuidv4() as string)}${(uuidv4() as string)}${(uuidv4() as string)}`;\n    challenge = challenge.replaceAll('-', '');\n\n    const md = forge.md.sha256.create();\n    md.update(challenge);\n    // noinspection UnnecessaryLocalVariableJS\n    const code = forge.util.encode64(md.digest().data);\n\n    const hash = code.replaceAll('+', '-')\n      .replaceAll('/', '_')\n      .replace(/=$/, '');\n\n    this.challenge.set(challenge);\n\n    return hash;\n  }\n\n  public async getRequestTokenData(state: string, code: string): Promise<DataInterface> {\n    const localState = await this.state.get();\n    const challenge = await this.challenge.get();\n\n    if (localState !== state) {\n      throw new Error('State do not match');\n    }\n\n    const { client_id, tokenUri } = this.config;\n\n    return {\n      uri: tokenUri,\n      data: {\n        code,\n        client_id,\n        code_verifier: challenge,\n        redirect_uri: this.getRedirectUri(),\n        grant_type: 'authorization_code',\n      },\n    };\n  }\n\n  public getRefreshTokenData(scope: string, token: string) {\n    const { client_id, tokenUri } = this.config;\n    return {\n      uri: tokenUri,\n      data: {\n        client_id,\n        scope,\n        refresh_token: token,\n        grant_type: 'refresh_token',\n      },\n    };\n  }\n\n  private getRedirectUri() {\n    const { redirectUri } = this.config;\n    const { location: { protocol, hostname, port } } = window;\n    let rUri = `${protocol}://${hostname}${redirectUri}`;\n    if ((protocol === 'https:' && port !== '443') || (protocol === 'http:' && port !== '80')) {\n      rUri = `${protocol}//${hostname}:${port}${redirectUri}`;\n    }\n\n    return rUri;\n  }\n}\n","import Base from './base';\nimport {\n  BaseInterface,\n  StorageInterface, TokenConfig,\n} from './interfaces';\n\nexport default class RefreshToken extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'refresh_token',\n  };\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n}\n","import Base from './base';\nimport {\n  BaseInterface, StorageInterface,\n  TokenConfig,\n} from './interfaces';\n\nexport default class State extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'state',\n  };\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n}\n","import jwt_decode from 'jwt-decode';\n\nimport Base from './base';\nimport {\n  BaseInterface,\n  CookieGetOptions,\n  CookieSetOptions,\n  ParseTokenInterface,\n  StorageInterface, TokenConfig,\n} from './interfaces';\n\nexport default class Token extends Base implements BaseInterface {\n  public defaultConfig: TokenConfig = {\n    prefix: 'oauth_',\n    name: 'token',\n  };\n\n  private parsed: ParseTokenInterface;\n\n  constructor(protected storage: StorageInterface, config?: TokenConfig) {\n    super(storage);\n\n    this.setConfig(this.defaultConfig, config);\n  }\n\n  public set(token: string, options?: CookieSetOptions): void {\n    this.storage.set(this.getName(), token, options);\n    this.parseToken(token);\n  }\n\n  private parseToken(token: string): void {\n    this.parsed = jwt_decode(token);\n  }\n\n  public getParsed(): any {\n    return this.parsed;\n  }\n\n  public isLoaded(): boolean {\n    return !!this.parsed;\n  }\n\n  public isExpired(): boolean {\n    if (!this.parsed) {\n      return false;\n    }\n\n    const date = new Date();\n    return date.getTime() <= this.parsed.exp;\n  }\n\n  public guard(scope?: string | string[]): boolean {\n    if (!this.parsed) {\n      return false;\n    }\n\n    if (typeof scope === 'undefined') {\n      return true;\n    }\n\n    const scopes = Array.isArray(scope) ? scope : [scope];\n    const filtered = scopes.filter((item: string) => !this.parsed.scopes.includes(item));\n    return filtered.length <= 0;\n  }\n\n  public async loadToken(options?: CookieGetOptions): Promise<boolean> {\n    const token = await this.get(options);\n\n    if (!token) {\n      return false;\n    }\n\n    this.parseToken(token);\n\n    if (this.isExpired()) {\n      this.remove();\n      return false;\n    }\n\n    return true;\n  }\n}\n"],"names":["uuidv4"],"mappings":"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"}